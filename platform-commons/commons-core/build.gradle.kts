dependencies {
    // spring
    api("org.springframework:spring-context")
    api("org.springframework:spring-tx")
    api("org.springframework.data:spring-data-commons")
    api("org.springframework.data:spring-data-relational")
    compileOnly("org.springframework:spring-jdbc")
    compileOnly("org.springframework:spring-webmvc")
    compileOnly("org.springframework.data:spring-data-redis")
    compileOnly("org.springframework.data:spring-data-jdbc")
    compileOnly("org.springframework.data:spring-data-jpa")
    compileOnly("org.springframework.data:spring-data-mongodb")
    compileOnly("org.springframework.data:spring-data-elasticsearch")
    compileOnly("org.springframework.security:spring-security-core")
    compileOnly("org.springframework.security:spring-security-web")
    compileOnly("org.springframework.security:spring-security-oauth2-jose")
    compileOnly("org.springframework.security:spring-security-oauth2-core")
    compileOnly("org.springframework.security:spring-security-oauth2-resource-server")
    compileOnly("org.springframework.amqp:spring-rabbit")
    compileOnly("org.springframework.kafka:spring-kafka")
    // commons
    api("commons-io:commons-io")
    api("commons-codec:commons-codec")
    api("org.apache.commons:commons-pool2")
    api("org.apache.commons:commons-text")
    api("org.apache.commons:commons-lang3")
    api("org.apache.commons:commons-collections4")
    // jackson
    api("com.fasterxml.jackson.core:jackson-annotations")
    api("com.fasterxml.jackson.core:jackson-databind")
    api("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
    api("com.fasterxml.jackson.datatype:jackson-datatype-jdk8")
    // hibernate & redis & cache & mybatis
    compileOnly("org.redisson:redisson")
    compileOnly("org.hibernate.orm:hibernate-core")
    compileOnly("me.ahoo.cosid:cosid-spring-redis")
    compileOnly("com.github.ben-manes.caffeine:caffeine")
    compileOnly("org.mybatis:mybatis")
    compileOnly("org.mybatis:mybatis-spring")
    compileOnly("com.baomidou:mybatis-plus-core")
    compileOnly("com.baomidou:mybatis-plus-extension")
    compileOnly("com.github.jsqlparser:jsqlparser")
    // sdks
    compileOnly("io.minio:minio")
    compileOnly("com.github.binarywang:weixin-java-mp")
    compileOnly("com.github.binarywang:weixin-java-cp")
    compileOnly("com.github.binarywang:weixin-java-miniapp")
    compileOnly("com.aliyun:aliyun-java-sdk-core")
    compileOnly("com.aliyun:dingtalk")
    compileOnly("com.aliyun:imm20170906")
    compileOnly("com.aliyun:facebody20191230")
    compileOnly("com.aliyun:dysmsapi20170525")
    compileOnly("com.aliyun:alimt20181012")
    compileOnly("com.aliyun.oss:aliyun-sdk-oss")
    compileOnly("com.qcloud:cos_api")
    compileOnly("com.tencentcloudapi:tencentcloud-sdk-java-common")
    compileOnly("com.tencentcloudapi:tencentcloud-sdk-java-sms")
    compileOnly("com.tencentcloudapi:tencentcloud-sdk-java-tmt")
    compileOnly("com.larksuite.oapi:oapi-sdk")
    // 3rd party
    api("com.github.spotbugs:spotbugs-annotations")
    api("io.swagger.core.v3:swagger-annotations")
    api("io.swagger.core.v3:swagger-models")
    api("com.baomidou:mybatis-plus-annotation")
    api("org.slf4j:slf4j-api")
    api("com.google.code.gson:gson")
    api("com.mysql:mysql-connector-j")
    api("com.google.guava:guava")
    api("com.squareup.okhttp3:okhttp")
    api("com.nimbusds:nimbus-jose-jwt")
    api("org.apache.httpcomponents.client5:httpclient5")
    compileOnly("com.nimbusds:oauth2-oidc-sdk")
    compileOnly("org.lionsoul:ip2region")
    compileOnly("org.thymeleaf:thymeleaf")
    compileOnly("nl.basjes.parse.useragent:yauaa")
    compileOnly("cn.hutool:hutool-captcha")
    compileOnly("joda-time:joda-time")
    compileOnly("com.squareup.okio:okio")
    compileOnly("org.aspectj:aspectjweaver")
    compileOnly("com.alibaba:easyexcel")
    compileOnly("org.apache.poi:poi")
    compileOnly("org.apache.poi:poi-ooxml")
    compileOnly("org.apache.poi:poi-ooxml-lite")
    compileOnly("org.dom4j:dom4j")
    // jakarta
    api("jakarta.annotation:jakarta.annotation-api")
    api("jakarta.validation:jakarta.validation-api")
    api("jakarta.persistence:jakarta.persistence-api")
    compileOnly("jakarta.transaction:jakarta.transaction-api")
    compileOnly("jakarta.mail:jakarta.mail-api")
    compileOnly("jakarta.websocket:jakarta.websocket-api")
    compileOnly("jakarta.servlet:jakarta.servlet-api")
}

tasks.named<Jar>("jar") {
    archiveBaseName.set("platform-commons-core")
}
