dependencies {
    // spring
    api("org.springframework:spring-tx")
    api("org.springframework:spring-web")
    api("org.springframework:spring-context")
    api("org.springframework.data:spring-data-commons")
    api("org.springframework.data:spring-data-relational")
    api("org.springframework.cloud:spring-cloud-commons")
    compileOnly("org.springframework:spring-webmvc")
    // modules
    compileOnly(project(":platform-commons:commons-ai"))
    compileOnly(project(":platform-commons:commons-docs"))
    compileOnly(project(":platform-commons:commons-elastic"))
    compileOnly(project(":platform-commons:commons-hibernate"))
    compileOnly(project(":platform-commons:commons-mybatis"))
    compileOnly(project(":platform-commons:commons-quartz"))
    compileOnly(project(":platform-commons:commons-rabbit"))
    compileOnly(project(":platform-commons:commons-redis"))
    compileOnly(project(":platform-commons:commons-oapis"))
    compileOnly(project(":platform-commons:commons-security"))
    compileOnly(project(":platform-commons:commons-websocket"))
    compileOnly(project(":platform-commons:commons-selenium"))
    // commons
    api("commons-io:commons-io")
    api("commons-codec:commons-codec")
    api("org.apache.commons:commons-crypto")
    api("org.apache.commons:commons-pool2")
    api("org.apache.commons:commons-text")
    api("org.apache.commons:commons-lang3")
    api("org.apache.commons:commons-collections4")
    // jackson
    api("com.fasterxml.jackson.core:jackson-databind")
    api("com.fasterxml.jackson.core:jackson-annotations")
    api("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
    api("com.fasterxml.jackson.datatype:jackson-datatype-jdk8")
    // http
    api("com.squareup.okhttp3:okhttp")
    api("org.apache.httpcomponents.client5:httpclient5")
    compileOnly("org.jodd:jodd-http")
    // database
    api("org.postgresql:postgresql")
    api("com.mysql:mysql-connector-j")
    // 3rd party
    api("org.jetbrains:annotations")
    api("com.github.spotbugs:spotbugs-annotations")
    api("io.swagger.core.v3:swagger-annotations")
    api("io.swagger.core.v3:swagger-models")
    api("org.slf4j:slf4j-api")
    api("com.google.code.gson:gson")
    api("com.google.guava:guava")
    api("com.nimbusds:nimbus-jose-jwt")
    api("cn.hutool:hutool-captcha")
    api("cn.hutool:hutool-dfa")
    api("cn.hutool:hutool-extra")
    api("cn.hutool:hutool-http")
    api("ognl:ognl")
    api("com.google.zxing:core")
    api("org.jsoup:jsoup")
    api("com.maxmind.geoip2:geoip2")
    compileOnly("org.quartz-scheduler:quartz")
    compileOnly("com.nimbusds:oauth2-oidc-sdk")
    compileOnly("org.thymeleaf:thymeleaf")
    compileOnly("joda-time:joda-time")
    compileOnly("com.squareup.okio:okio")
    compileOnly("org.aspectj:aspectjweaver")
    compileOnly("org.dom4j:dom4j")
    compileOnly("org.apache.shardingsphere:shardingsphere-jdbc")
    // jakarta
    api("jakarta.annotation:jakarta.annotation-api")
    api("jakarta.validation:jakarta.validation-api")
    api("jakarta.persistence:jakarta.persistence-api")
    compileOnly("jakarta.mail:jakarta.mail-api")
    compileOnly("jakarta.servlet:jakarta.servlet-api")
    compileOnly("jakarta.websocket:jakarta.websocket-api")
    compileOnly("jakarta.transaction:jakarta.transaction-api")
}

tasks.named<Jar>("jar") {
    archiveBaseName.set("platform-commons-core")
}
